version: '3.7'

services:
  app_proxy:
    environment:
      APP_HOST: denny-wger_web_1
      APP_PORT: 8000

  web:
    image: wger/server:latest
    restart: on-failure
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
    env_file:
      - ./data/config/prod.env
    volumes:
      - static:/wger/static
      - media:/wger/media
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8000
      interval: 10s
      timeout: 5s
      start_period: 300s
      retries: 5

  nginx:
    image: nginx:stable
    depends_on:
      - web
    volumes:
      - ./data/config/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static:/wger/static:ro
      - media:/wger/media:ro
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: on-failure

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=wger
      - POSTGRES_PASSWORD=wger
      - POSTGRES_DB=wger
      - TZ=Europe/Berlin
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U wger
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: on-failure

  cache:
    image: redis
    volumes:
      - ./data/config/redis.conf:/usr/local/etc/redis/redis.conf:ro
      - ./data/redis:/data
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf"]
    healthcheck:
      test: redis-cli ping
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: on-failure

  celery_worker:
    image: wger/server:latest
    command: /start-worker
    env_file:
      - ./data/config/prod.env
    volumes:
      - media:/wger/media
    depends_on:
      web:
        condition: service_healthy
    healthcheck:
      test: celery -A wger inspect ping || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: on-failure

  celery_beat:
    image: wger/server:latest
    command: /start-beat
    volumes:
      - ./data/celery-beat:/home/wger/beat/
    env_file:
      - ./data/config/prod.env
    depends_on:
      celery_worker:
        condition: service_healthy
    restart: on-failure

volumes:
  static:
  media:
