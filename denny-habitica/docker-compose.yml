version: "3"
services:
  server:
    image: docker.io/awinterstein/habitica-server:latest
    restart: unless-stopped
    depends_on:
      - mongo
    environment:
      - NODE_DB_URI=mongodb://mongo/habitica
      - BASE_URL=http://127.0.0.1:3000
      - INVITE_ONLY=false
      - EMAIL_SERVER_URL=mail.example.com
      - EMAIL_SERVER_PORT=587
      - EMAIL_SERVER_AUTH_USER=mail_user
      - EMAIL_SERVER_AUTH_PASSWORD=mail_password
      - ADMIN_EMAIL=mail@example.com
    networks:
      - habitica
    volumes:
      - ${APP_DATA_DIR}/habitica/server:/usr/src/app

  mongo:
    image: docker.io/mongo:5.0
    restart: unless-stopped
    hostname: mongo
    command: ["--replSet", "rs", "--bind_ip_all", "--port", "27017"]
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate() }" | mongosh --port 27017 --quiet
      interval: 10s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30
    volumes:
      - ${APP_DATA_DIR}/habitica/db:/data/db:rw
      - ${APP_DATA_DIR}/habitica/dbconf:/data/configdb
    networks:
      habitica:
        aliases:
          - mongo

  app_proxy:
    environment:
      APP_HOST: denny-habitica_web_1
      APP_PORT: 3000
    networks:
      - habitica
    #ports:
      # "3944:3000"  # Weiterleitung von umbrel-2.local:3944 auf Port 3000

networks:
  habitica:
    driver: bridge
