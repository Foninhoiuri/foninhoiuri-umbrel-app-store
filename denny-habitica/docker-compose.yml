version: '3.7'

services:
  app_proxy:
    environment:
      APP_HOST: denny-habitica_web_1
      APP_PORT: 3000

  web:
    image: awinterstein/habitica-server:5.34.0@sha256:ebc2299b324cc8496bfdd4d7d2b5b5bbc555c21068751dc1bfe734deb4b0fbbf
    environment:
      # NODE_DB_URI=mongodb://mongo/habitica # this only needs to be adapted if using a separate database
      - BASE_URL=http://umbrel-2.local:3944 # change this to the URL under which your instance will be reachable
      - INVITE_ONLY=false # change to `true` after registration of initial users, to restrict further registrations
      # EMAIL_SERVER_URL=mail.example.com
      # EMAIL_SERVER_PORT=587
      # EMAIL_SERVER_AUTH_USER=mail_user
      # EMAIL_SERVER_AUTH_PASSWORD=mail_password
      # ADMIN_EMAIL=mail@example.com # the sender address to send out emails
    restart: on-failure
    depends_on:
      - mongo
    networks:
      - habitica
  mongo:
    image: mongo:8.0.5@sha256:f6164e498dbaee3966031c1ced1bfa0fd1c4961151b38a770fa6994f4b0dcae7
    restart: on-failure
    command: ["--replSet", "rs", "--bind_ip_all", "--port", "27017"]
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate() }" | mongosh --port 27017 --quiet
      interval: 10s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30
    volumes:
      - ${APP_DATA_DIR}/mongo/db:/data/db:rw
      - ${APP_DATA_DIR}/mongo/dbconf:/data/configdb
    networks:
      habitica:
        aliases:
          - mongo
networks:
  habitica:
    driver: bridge
