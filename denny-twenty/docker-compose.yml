version: "3.9"

services:
  server:
    image: twentycrm/twenty:${TAG:-latest}
    volumes:
      - server-local-data:/app/packages/twenty-server/.local-storage
      - docker-data:/app/docker-data
    ports:
      - "2020:3000"  # Port 2020 für Zugriff über umbrel.local
    environment:
      PORT: 3000
      PG_DATABASE_URL: postgres://twenty:twenty@db:5432/default
      SERVER_URL: http://umbrel.local:2020
      FRONT_BASE_URL: http://umbrel.local:2020
      REDIS_URL: redis://redis:6379
      ENABLE_DB_MIGRATIONS: "true"
      STORAGE_TYPE: "local"
      APP_SECRET: ${APP_SECRET:-"mysecret"}  # Standardwert, falls APP_SECRET fehlt
    depends_on:
      db:
        condition: service_healthy
    restart: always

  worker:
    image: twentycrm/twenty:${TAG:-latest}
    command: ["yarn", "worker:prod"]
    environment:
      PG_DATABASE_URL: postgres://twenty:twenty@db:5432/default
      SERVER_URL: http://umbrel.local:2020
      FRONT_BASE_URL: http://umbrel.local:2020
      REDIS_URL: redis://redis:6379
      ENABLE_DB_MIGRATIONS: "false"
      STORAGE_TYPE: "local"
      APP_SECRET: ${APP_SECRET:-"mysecret"}
    depends_on:
      db:
        condition: service_healthy
      server:
        condition: service_healthy
    restart: always

  db:
    image: postgres:13
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: twenty
      POSTGRES_PASSWORD: ${POSTGRES_ADMIN_PASSWORD:-"umbrelpass"}  # Standardpasswort
      POSTGRES_DB: default
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U twenty -d default"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  redis:
    image: redis:6
    restart: always

volumes:
  docker-data:
  db-data:
  server-local-data:
